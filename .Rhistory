knitr::opts_chunk$set(echo = TRUE)
continentes <- felicidade_2017 %>%
filter(CONTINENT != 'NA') %>%
group_by(CONTINENT) %>%
summarise(media = mean(happiness_score, na.rm=TRUE),
maximo = max(happiness_score, na.rm=TRUE),
minimo = min(happiness_score, na.rm=TRUE),
mediana = median(happiness_score, na.rm=TRUE),
desvio_padrao = sd(happiness_score, na.rm=TRUE))
library(readr)
library(janitor)
library(dplyr)
library(raster)
library(skimr)
library(ggplot2)
library(gapminder)
library(knitr)
library(leaflet)
library(mapsBR)
library(sf)
library(rgeos)
library(maptools)
felicidade <- read.csv("../data/felicidade_mundo.csv", sep=",", encoding = 'UTF-8', dec = '.', stringsAsFactors = F)
felicidade <- clean_names(felicidade,case = c("snake"))
library(rgdal)
library(leaflet)
library(viridis)
download.file(file.path('http://www.naturalearthdata.com/http/',
'www.naturalearthdata.com/download/50m/cultural',
'ne_50m_admin_0_countries.zip'),
f <- tempfile())
unzip(f, exdir=tempdir())
world <- readOGR(tempdir(), 'ne_50m_admin_0_countries', encoding='UTF-8')
felicidade_2017 <- felicidade %>%
filter(index_year == 2017) %>%
mutate(.,name = as.factor(name))
world %<>%
st_as_sf() %>%
mutate(.,BRK_NAME = as.factor(BRK_NAME))
felicidade_2017 <- world %>%
full_join(
y = felicidade_2017,
by = c("BRK_NAME" = "name"))
continentes <- felicidade_2017 %>%
filter(CONTINENT != 'NA') %>%
group_by(CONTINENT) %>%
summarise(media = mean(happiness_score, na.rm=TRUE),
maximo = max(happiness_score, na.rm=TRUE),
minimo = min(happiness_score, na.rm=TRUE),
mediana = median(happiness_score, na.rm=TRUE),
desvio_padrao = sd(happiness_score, na.rm=TRUE))
View(continentes)
continentes$geometry = NULL
View(continentes)
View(felicidade_2017)
GLIMPSE(felicidade_2017)
glimpse(felicidade_2017)
continentes <- felicidade_2017 %>%
filter(CONTINENT != 'NA') %>%
group_by(CONTINENT, SUBREGION, REGION_WB) %>%
summarise(paises = count(BRK_NAME),
media = mean(happiness_score, na.rm=TRUE),
maximo = max(happiness_score, na.rm=TRUE),
minimo = min(happiness_score, na.rm=TRUE),
mediana = median(happiness_score, na.rm=TRUE),
desvio_padrao = sd(happiness_score, na.rm=TRUE))
continentes <- felicidade_2017 %>%
filter(CONTINENT != 'NA') %>%
group_by(CONTINENT, SUBREGION, REGION_WB) %>%
summarise(paises = count(NAME),
media = mean(happiness_score, na.rm=TRUE),
maximo = max(happiness_score, na.rm=TRUE),
minimo = min(happiness_score, na.rm=TRUE),
mediana = median(happiness_score, na.rm=TRUE),
desvio_padrao = sd(happiness_score, na.rm=TRUE))
continentes <- felicidade_2017 %>%
filter(CONTINENT != 'NA') %>%
group_by(CONTINENT, SUBREGION, REGION_WB) %>%
summarise(paises = n(),
media = mean(happiness_score, na.rm=TRUE),
maximo = max(happiness_score, na.rm=TRUE),
minimo = min(happiness_score, na.rm=TRUE),
mediana = median(happiness_score, na.rm=TRUE),
desvio_padrao = sd(happiness_score, na.rm=TRUE))
View(continentes)
View(felicidade_2017)
continentes <- felicidade_2017 %>%
filter(CONTINENT != 'NA', happiness_score != 'NA') %>%
group_by(CONTINENT, SUBREGION, REGION_WB) %>%
summarise(paises = n(),
media = mean(happiness_score, na.rm=TRUE),
maximo = max(happiness_score, na.rm=TRUE),
minimo = min(happiness_score, na.rm=TRUE),
mediana = median(happiness_score, na.rm=TRUE),
desvio_padrao = sd(happiness_score, na.rm=TRUE))
continentes$geometry = NULL
View(continentes)
continentes <- felicidade_2017 %>%
filter(CONTINENT != 'NA', happiness_score != 'NA') %>%
group_by(CONTINENT, SUBREGION, REGION_WB) %>%
summarise(paises = n(),
media = mean(happiness_score, na.rm=TRUE),
maximo = max(happiness_score, na.rm=TRUE),
minimo = min(happiness_score, na.rm=TRUE),
mediana = median(happiness_score, na.rm=TRUE),
desvio_padrao = sd(happiness_score, na.rm=TRUE)) %>%
arrange(desc(media))
continentes$geometry = NULL
View(continentes)
continentes <- felicidade_2017 %>%
filter(CONTINENT != 'NA', happiness_score != 'NA') %>%
group_by(CONTINENT, SUBREGION, REGION_WB) %>%
summarise(paises = n(),
media = mean(happiness_score, na.rm=TRUE),
maximo = max(happiness_score, na.rm=TRUE),
minimo = min(happiness_score, na.rm=TRUE),
mediana = median(happiness_score, na.rm=TRUE),
desvio_padrao = sd(happiness_score, na.rm=TRUE)) %>%
arrange(desc(media)) %>%
mutate(posicao = row_number())
continentes$geometry = NULL
View(continentes)
View(continentes)
continentes <- continentes %>%
mutate(posicao = row_number())
View(continentes)
continentes <- felicidade_2017 %>%
filter(CONTINENT != 'NA', happiness_score != 'NA') %>%
group_by(CONTINENT, SUBREGION, REGION_WB) %>%
summarise(paises = n(),
media = mean(happiness_score, na.rm=TRUE),
maximo = max(happiness_score, na.rm=TRUE),
minimo = min(happiness_score, na.rm=TRUE),
mediana = median(happiness_score, na.rm=TRUE),
desvio_padrao = sd(happiness_score, na.rm=TRUE))
continentes$geometry = NULL
idese <- readRDS("../data/Idese Municipios 2007-2014.rds")
idese <- clean_names(idese,case = c("snake"))
idese_saude <- idese1 %>%
filter(ano == 2014) %>%
mutate(classificacao_saude = as.factor(ifelse(bloco_saude >= 0.8, yes = '1 - Muito Alto',
no = ifelse(bloco_saude >= 0.7, yes = '2 - Alto',
no = ifelse(bloco_saude >= 0.6, yes = '3 - Médio',
no = ifelse(bloco_saude >= 0.5, yes = '4 - Baixo',
no = '5 - Muito Baixo')))))) %>%
mutate(cor_saude = ifelse(classificacao_saude == '1 - Muito Alto', yes = '#006400',
no = ifelse(classificacao_saude == '2 - Alto', yes = '#228b22',
no = ifelse(classificacao_saude == '3 - Médio', yes = '#ffff40',
no = ifelse(classificacao_saude == '4 - Baixo', yes = '#ff8c00',
no = '#8b0000')))))
data(regMun) #carrega mapa com os municípios brasileiros
regMun %<>%
st_as_sf() %>%
filter(UF == 'RS') %>%
mutate(.,COD = as.factor(COD))
idese1 <- regMun %>%
left_join(
y = idese,
by = c("COD" = "cod")
)
cores_escala <- c("#006400", "#228b22", "#ffff40", "#ff8c00", "#8b0000")
escala <- c("1 - Muito Alto - 0,80 a 1,00","2 - Alto - 0,70 a 0,79","3 - Médio - 0,60 a 0,69","4 - Baixo - 0,50 a 0,59","5 - Muito Baixo - 0,00 a 0,49")
idese_saude <- idese1 %>%
filter(ano == 2014) %>%
mutate(classificacao_saude = as.factor(ifelse(bloco_saude >= 0.8, yes = '1 - Muito Alto',
no = ifelse(bloco_saude >= 0.7, yes = '2 - Alto',
no = ifelse(bloco_saude >= 0.6, yes = '3 - Médio',
no = ifelse(bloco_saude >= 0.5, yes = '4 - Baixo',
no = '5 - Muito Baixo')))))) %>%
mutate(cor_saude = ifelse(classificacao_saude == '1 - Muito Alto', yes = '#006400',
no = ifelse(classificacao_saude == '2 - Alto', yes = '#228b22',
no = ifelse(classificacao_saude == '3 - Médio', yes = '#ffff40',
no = ifelse(classificacao_saude == '4 - Baixo', yes = '#ff8c00',
no = '#8b0000')))))
tooltip <- sprintf("Cidade: <strong>%s</strong><br>
<br>Índice de Saúde: <strong>%s</strong><br>",
idese_saude$nome,
idese_saude$bloco_saude)
qpal <- colorFactor(palette = cores_escala, escala)
View(idese_saude)
?addPolygons
?addPolygons
mapa3 <- leaflet(idese_saude) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addTiles() %>%
addMarkers()
View(idese_saude)
mapa3 <- leaflet(idese_saude) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addTiles() %>%
addPolygons(color      = ~cor_saude,
label = bloco_saude,
stroke      = F,
weight      = 0.1,
fillOpacity = 0.7,
popup       = tooltip) %>%
addLegend("bottomleft",
pal = qpal,
values = escala,
title = "Índice de Saúde")
mapa3 <- leaflet(idese_saude) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addTiles() %>%
addPolygons(color       = ~cor_saude,
label       = ~bloco_saude,
stroke      = F,
weight      = 0.1,
fillOpacity = 0.7,
popup       = tooltip) %>%
addLegend("bottomleft",
pal = qpal,
values = escala,
title = "Índice de Saúde")
?colorNumeric
mapa3 <- leaflet(idese_saude) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addTiles() %>%
addPolygons(label       = ~bloco_saude,
stroke      = F,
weight      = 0.1,
fillOpacity = 0.7,
popup       = tooltip,
pal = qpal)
mapa3 <- leaflet(idese_saude) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addTiles() %>%
addPolygons(label       = ~bloco_saude,
stroke      = F,
weight      = 0.1,
fillOpacity = 0.7,
popup       = tooltip,
palette = qpal)
mapa3 <- leaflet(idese_saude) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addTiles() %>%
addPolygons(label       = ~bloco_saude,
stroke      = F,
weight      = 0.1,
fillOpacity = 0.7,
popup       = tooltip)
qpal <- colorNumeric(viridis(), idese_saude$bloco_saude) #colorFactor(palette = cores_escala, escala)
qpal <- colorNumeric(viridis(50), idese_saude$bloco_saude) #colorFactor(palette = cores_escala, escala)
qpal <- colorNumeric(viridis(10), idese_saude$bloco_saude) #colorFactor(palette = cores_escala, escala)
qpal <- colorNumeric(viridis(10), idese_saude$bloco_saude) #colorFactor(palette = cores_escala, escala)
qpal <- colorNumeric("RdYlGn", idese_saude$bloco_saude) #colorFactor(palette = cores_escala, escala)
knitr::opts_chunk$set(echo = TRUE)
tabela4 <- idese1 %>%
group_by(ano) %>%
summarise(bloco_educacao = mean(bloco_educacao),
bloco_renda = mean(bloco_renda),
bloco_saude = mean(bloco_saude),
idese = mean(idese))
